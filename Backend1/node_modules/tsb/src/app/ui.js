"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
exports.React = require("react");
exports.ReactDOM = require("react-dom");
exports.Radium = require('radium');
exports.csx = require('csx');
var events_1 = require("../common/events");
exports.$ = require("jquery");
var commands = require("./commands/commands");
var BaseComponent = (function (_super) {
    __extends(BaseComponent, _super);
    function BaseComponent() {
        var _this = this;
        _super.apply(this, arguments);
        this.disposible = new events_1.CompositeDisposible();
        this.isUnmounted = false;
        this._afterComponentDidUpdateQueue = [];
        this.unmount = function () {
            var parentElement = _this.getParentDomNode();
            exports.ReactDOM.unmountComponentAtNode(parentElement);
        };
        this.getParentDomNode = function () {
            var node = exports.ReactDOM.findDOMNode(_this);
            return node.parentElement;
        };
    }
    BaseComponent.prototype.componentWillUnmount = function () {
        this.disposible.dispose();
        this.isUnmounted = true;
    };
    BaseComponent.prototype.ref = function (name) {
        return this.refs[name];
    };
    BaseComponent.prototype.afterComponentDidUpdate = function (cb) {
        this._afterComponentDidUpdateQueue.push(cb);
    };
    BaseComponent.prototype.componentDidUpdate = function () {
        this._afterComponentDidUpdateQueue.forEach(function (cb) { return cb(); });
        this._afterComponentDidUpdateQueue = [];
    };
    return BaseComponent;
})(exports.React.Component);
exports.BaseComponent = BaseComponent;
require('velocity-animate');
require('velocity-animate/velocity.ui');
var VelocityReact = require('velocity-react');
exports.VelocityTransitionGroup = VelocityReact.VelocityTransitionGroup, exports.VelocityComponent = VelocityReact.VelocityComponent;
exports.Toggle = require('react-toggle');
require('react-toggle/style.css');
var toastr = require("toastr");
require('toastr/build/toastr.css');
commands.esc.on(function () {
    toastr.clear();
});
function notifyInfoQuickDisappear(message) {
    toastr.info(message, null, { timeOut: 600 });
}
exports.notifyInfoQuickDisappear = notifyInfoQuickDisappear;
function notifyInfoNormalDisappear(message) {
    toastr.info(message);
}
exports.notifyInfoNormalDisappear = notifyInfoNormalDisappear;
function notifyWarningNormalDisappear(message, options) {
    toastr.warning(message, null, options && { onclick: options.onClick });
}
exports.notifyWarningNormalDisappear = notifyWarningNormalDisappear;
function notifySuccessNormalDisappear(message) {
    toastr.success(message);
}
exports.notifySuccessNormalDisappear = notifySuccessNormalDisappear;
function comingSoon(featureName) {
    toastr.info("Coming soon! : " + featureName);
}
exports.comingSoon = comingSoon;
function getKeyStates(e) {
    var event = e;
    var nativeEvent = e.nativeEvent;
    var tab = event.key == 'Tab';
    var shift = nativeEvent.shiftKey;
    var mod = nativeEvent.metaKey || nativeEvent.ctrlKey;
    var enter = event.key == 'Enter';
    var up = event.key == 'ArrowUp';
    var down = event.key == 'ArrowDown';
    var tabNext = tab && !shift;
    var tabPrevious = tab && shift;
    return { tab: tab, tabNext: tabNext, tabPrevious: tabPrevious, up: up, down: down, shift: shift, mod: mod, enter: enter };
}
exports.getKeyStates = getKeyStates;
exports.DraggableCore = require('react-draggable').DraggableCore;
function indent(indent, tabSize) {
    if (tabSize === void 0) { tabSize = 4; }
    return Array((indent * tabSize) + 1).join().split('').map(function (i) { return "\u00a0"; });
}
exports.indent = indent;
