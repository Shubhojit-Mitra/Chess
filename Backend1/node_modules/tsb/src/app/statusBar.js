"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var utils = require("../common/utils");
var styles = require("./styles/styles");
var React = require("react");
var ReactDOMServer = require("react-dom/server");
var csx = require('csx');
var ui_1 = require("./ui");
var ui = require("./ui");
var commands = require("./commands/commands");
var pendingRequestsIndicator_1 = require("./pendingRequestsIndicator");
var icon_1 = require("./icon");
var react_redux_1 = require("react-redux");
var state_1 = require("./state/state");
var state = require("./state/state");
var notificationKeyboardStyle = {
    border: '2px solid',
    borderRadius: '6px',
    display: 'inline-block',
    padding: '5px',
    background: 'grey',
};
var StatusBar = (function (_super) {
    __extends(StatusBar, _super);
    function StatusBar(props) {
        var _this = this;
        _super.call(this, props);
        this.toggleErrors = function () {
            if (_this.props.errorsExpanded) {
                state_1.collapseErrors({});
            }
            else {
                state_1.expandErrors({});
            }
        };
        this.openErrorLocation = function (error) {
            commands.doOpenOrFocusFile.emit({ filePath: error.filePath, position: error.from });
        };
        this.openFile = function (filePath) {
            commands.doOpenOrFocusFile.emit({ filePath: filePath });
        };
        this.giveStar = function () {
            window.open('https://github.com/TypeScriptBuilder/tsb');
        };
        this.giveRose = function () {
            window.open('https://twitter.com/basarat');
        };
        this.state = {};
    }
    StatusBar.prototype.componentDidMount = function () {
        exports.statusBar = this;
    };
    StatusBar.prototype.render = function () {
        var _this = this;
        var errorCount = utils.selectMany(Object.keys(this.props.errorsByFilePath).map(function (k) { return _this.props.errorsByFilePath[k]; })).length;
        var projectTipKeboard = ReactDOMServer.renderToString(React.createElement("div", {style: notificationKeyboardStyle}, "Alt+Shift+P"));
        var inActiveProjectSection = !this.props.currentFilePath
            ? ''
            : React.createElement("span", {style: styles.statusBarSection}, state.inActiveProject(this.props.currentFilePath)
                ? React.createElement("span", {className: "hint--top hint--success", style: csx.extend(styles.noSelect, styles.statusBarSuccess, styles.hand), onClick: function () { return ui.notifySuccessNormalDisappear("The file is a part of the currently active TypeScript project and we are actively providing code intelligence"); }, "data-hint": "File is part of the currently active project. üíª providing code intelligence."}, React.createElement(icon_1.Icon, {name: "eye"}))
                : React.createElement("span", {className: "hint--top", style: csx.extend(styles.noSelect, styles.statusBarError, styles.hand), onClick: function () { return ui.notifyWarningNormalDisappear("The file is not a part of the currently active TypeScript project <br/> <br/> " + projectTipKeboard, { onClick: function () { return commands.omniSelectProject.emit({}); } }); }, "data-hint": "File is not a part of the currently active project. Robots deactivated."}, React.createElement(icon_1.Icon, {name: "eye-slash"})));
        return (React.createElement("div", null, React.createElement("div", {style: csx.extend(styles.statusBar, csx.horizontal, csx.center)}, React.createElement("span", {style: csx.extend(styles.statusBarSection, styles.noSelect, styles.hand), onClick: this.toggleErrors, className: "hint--top", "data-hint": errorCount + " errors. Click to toggle message panel."}, React.createElement("span", {style: csx.extend(errorCount ? styles.statusBarError : styles.statusBarSuccess, { transition: 'color .4s' })}, errorCount, " ", React.createElement(icon_1.Icon, {name: "times-circle"}))), this.props.activeProject
            ? React.createElement("span", {style: csx.extend(styles.statusBarSection, styles.hand), onClick: function () { return _this.openFile(_this.props.activeProject.tsconfigFilePath); }}, this.props.activeProject.name)
            : '', inActiveProjectSection, this.props.currentFilePath
            ? React.createElement("span", {className: "hint--top", "data-hint": "Click to copy the file path to clipboard", "data-clipboard-text": this.props.currentFilePath.replace(/\//g, commands.windows ? '\\' : '/'), onClick: function () { return ui.notifyInfoQuickDisappear("File path copied to clipboard"); }, style: csx.extend(styles.statusBarSection, styles.noSelect, styles.hand)}, this.props.currentFilePath)
            : '', React.createElement("span", {style: csx.flex}), React.createElement("span", {style: csx.extend(styles.statusBarSection)}, React.createElement(pendingRequestsIndicator_1.PendingRequestsIndicator, null)), React.createElement("span", {style: csx.extend(styles.statusBarSection)}, this.props.socketConnected ?
            React.createElement("span", {className: "hint--left hint--success", "data-hint": "Connected to server"}, " ", React.createElement(icon_1.Icon, {style: { color: styles.successColor, cursor: 'pointer' }, name: "flash", onClick: function () { return ui.notifySuccessNormalDisappear("Connected to tsb"); }}))
            : React.createElement("span", {className: "hint--left hint--error", "data-hint": "Disconnected from server"}, " ", React.createElement(icon_1.Icon, {style: { color: styles.errorColor, cursor: 'pointer' }, name: "spinner", spin: true, onClick: function () { return ui.notifyWarningNormalDisappear("Disconneted from tsb"); }}))), React.createElement("span", {style: csx.extend(styles.statusBarSection, styles.noSelect, styles.hand)}, React.createElement("span", {style: { paddingRight: '2px' }, onClick: this.giveStar, className: "hint--left", "data-hint": "If you like it then you should have put a star on it üåü. Also, go here for support ‚ö†Ô∏è"}, "üåü"), React.createElement("span", {onClick: this.giveRose, className: "hint--left", "data-hint": "Your love keep this rose alive üåπ"}, "üåπ")))));
    };
    StatusBar = __decorate([
        react_redux_1.connect(function (state) {
            return {
                errorsExpanded: state.errorsExpanded,
                activeProject: state.activeProject,
                activeProjectFiles: state.activeProjectFilePathTruthTable,
                currentFilePath: state.currentFilePath,
                errorsByFilePath: state.errorsByFilePath,
                socketConnected: state.socketConnected
            };
        }), 
        __metadata('design:paramtypes', [Object])
    ], StatusBar);
    return StatusBar;
})(ui_1.BaseComponent);
exports.StatusBar = StatusBar;
