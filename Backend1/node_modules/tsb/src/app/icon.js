"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var React = require("react");
var ui_1 = require("./ui");
var ui = require("./ui");
var Icon = (function (_super) {
    __extends(Icon, _super);
    function Icon() {
        _super.apply(this, arguments);
    }
    Icon.prototype.render = function () {
        var _a = this.props, name = _a.name, size = _a.size, rotate = _a.rotate, flip = _a.flip, spin = _a.spin, fixedWidth = _a.fixedWidth, stack = _a.stack, inverse = _a.inverse, pulse = _a.pulse, className = _a.className, style = _a.style;
        var props = this.props;
        var classNames = "fa fa-" + name;
        if (size) {
            classNames = classNames + " fa-" + size;
        }
        if (rotate) {
            classNames = classNames + " fa-rotate-" + rotate;
        }
        if (flip) {
            classNames = classNames + " fa-flip-" + flip;
        }
        if (fixedWidth) {
            classNames = classNames + " fa-fw";
        }
        if (spin) {
            classNames = classNames + " fa-spin";
        }
        if (pulse) {
            classNames = classNames + " fa-pulse";
        }
        if (stack) {
            classNames = classNames + " fa-stack-" + stack;
        }
        if (inverse) {
            classNames = classNames + " fa-inverse";
        }
        if (className) {
            classNames = classNames + " " + className;
        }
        return (React.createElement("i", React.__spread({className: classNames, style: style}, props)));
    };
    Icon = __decorate([
        ui.Radium, 
        __metadata('design:paramtypes', [])
    ], Icon);
    return Icon;
})(ui_1.BaseComponent);
exports.Icon = Icon;
