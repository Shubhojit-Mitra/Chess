"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var React = require("react");
var ReactDOM = require("react-dom");
var csx = require('csx');
var ui_1 = require("./ui");
var ui = require("./ui");
var utils = require("../common/utils");
var styles = require("./styles/styles");
var commands = require("./commands/commands");
var CodeMirror = require('codemirror');
var Modal = require('react-modal');
var socketClient_1 = require("../socket/socketClient");
var styles_1 = require("./styles/styles");
var codeEditor_1 = require("./codemirror/codeEditor");
var GotoDefinition = (function (_super) {
    __extends(GotoDefinition, _super);
    function GotoDefinition(props) {
        var _this = this;
        _super.call(this, props);
        this.onChangeSelected = function (event) {
            var keyStates = ui.getKeyStates(event);
            if (keyStates.up || keyStates.tabPrevious) {
                event.preventDefault();
                var selectedIndex = utils.rangeLimited({ num: _this.state.selectedIndex - 1, min: 0, max: _this.props.data.definitions.length - 1, loopAround: true });
                _this.setState({ selectedIndex: selectedIndex });
            }
            if (keyStates.down || keyStates.tabNext) {
                event.preventDefault();
                var selectedIndex = utils.rangeLimited({ num: _this.state.selectedIndex + 1, min: 0, max: _this.props.data.definitions.length - 1, loopAround: true });
                _this.setState({ selectedIndex: selectedIndex });
            }
            if (keyStates.enter) {
                event.preventDefault();
                var newText = ReactDOM.findDOMNode(_this.refs.mainInput).value.trim();
                var def = _this.props.data.definitions[_this.state.selectedIndex];
                commands.doOpenOrFocusFile.emit({
                    filePath: def.filePath,
                    position: def.position
                });
                setTimeout(function () { _this.unmount(); });
            }
        };
        this.selectAndRefocus = function (index) {
            _this.setState({ selectedIndex: index });
            _this.focus();
        };
        this.focus = function () {
            var input = ReactDOM.findDOMNode(_this.refs.mainInput);
            input.focus();
        };
        this.state = {
            selectedIndex: 0,
        };
    }
    GotoDefinition.prototype.componentDidMount = function () {
        var _this = this;
        this.disposible.add(commands.esc.on(function () {
            _this.unmount();
        }));
        setTimeout(function () {
            _this.focus();
            var input = ReactDOM.findDOMNode(_this.refs.mainInput);
            var len = input.value.length;
            input.setSelectionRange(0, len);
        });
    };
    GotoDefinition.prototype.componentDidUpdate = function () {
        var _this = this;
        setTimeout(function () {
            var selected = ReactDOM.findDOMNode(_this.refs.selectedTabTitle);
            if (selected) {
                selected.scrollIntoViewIfNeeded(false);
            }
        });
    };
    GotoDefinition.prototype.render = function () {
        var _this = this;
        var definitions = this.props.data.definitions;
        var selectedPreview = this.props.data.definitions[this.state.selectedIndex];
        var filePathsRendered = definitions.map(function (item, i) {
            var selected = i == _this.state.selectedIndex;
            var active = selected ? styles.tabHeaderActive : {};
            var ref = selected && "selectedTabTitle";
            return (React.createElement("div", {ref: ref, key: item.filePath + i, style: [styles.tabHeader, active, { overflow: 'auto' }], onClick: function () { return _this.selectAndRefocus(i); }}, React.createElement("div", null, utils.getFileName(item.filePath), " (line: ", item.position.line + 1, ")")));
        });
        var previewRendered = React.createElement(codeEditor_1.CodeEditor, {key: this.state.selectedIndex, filePath: selectedPreview.filePath, readOnly: "nocursor", preview: selectedPreview.span});
        return (React.createElement(Modal, {isOpen: true, onRequestClose: this.unmount}, React.createElement("div", {style: [csx.vertical, csx.flex]}, React.createElement("div", {style: [csx.horizontal]}, React.createElement("h4", null, "Multiple Definitions Found"), React.createElement("div", {style: [csx.flex]}), React.createElement("div", {style: { fontSize: '0.9rem', color: 'grey' }}, React.createElement("code", {style: styles_1.modal.keyStrokeStyle}, "Esc"), " to exit ", React.createElement("code", {style: styles_1.modal.keyStrokeStyle}, "Enter"), " to select", ' ', React.createElement("code", {style: styles_1.modal.keyStrokeStyle}, "Up / Down"), " to see usages")), React.createElement("input", {defaultValue: '', style: styles.hiddenInput, type: "text", ref: "mainInput", placeholder: "Filter", onKeyDown: this.onChangeSelected}), React.createElement("div", {style: [csx.horizontal, csx.flex, { overflow: 'hidden' }]}, React.createElement("div", {style: { width: '200px', overflow: 'auto' }}, filePathsRendered), React.createElement("div", {style: [csx.flex, csx.flexRoot, styles.modal.previewContainerStyle]}, previewRendered)))));
    };
    GotoDefinition = __decorate([
        ui.Radium, 
        __metadata('design:paramtypes', [Object])
    ], GotoDefinition);
    return GotoDefinition;
})(ui_1.BaseComponent);
exports.GotoDefinition = GotoDefinition;
CodeMirror.commands[commands.additionalEditorCommands.gotoDefinition] = function (editor) {
    var cursor = editor.getDoc().getCursor();
    var filePath = editor.filePath;
    var position = editor.getDoc().indexFromPos(cursor);
    socketClient_1.server.getDefinitionsAtPosition({ filePath: filePath, position: position }).then(function (res) {
        if (res.definitions.length == 0) {
            ui.notifyInfoNormalDisappear('No TypeScript definition at cursor location');
        }
        else if (res.definitions.length == 1) {
            var def = res.definitions[0];
            commands.doOpenOrFocusFile.emit({
                filePath: def.filePath,
                position: def.position
            });
        }
        else {
            var node = document.createElement('div');
            ReactDOM.render(React.createElement(GotoDefinition, {data: res}), node);
        }
    });
};
